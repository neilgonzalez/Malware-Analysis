
#include <iostream>
#include <chrono>
#include <thread>
#include <string>
#include <Windows.h>
using namespace std;

int main() {
	/*
	CHANGE DESKTOP WALLPAPER:

	const wchar_t* wallpaper_file = L"PATH_TO_BMP_IMAGE";
	int return_value = SystemParametersInfo(SPI_SETDESKWALLPAPER, 0, PVOID(wallpaper_file), SPIF_UPDATEINIFILE);
	*/
	TCHAR szPath[MAX_PATH];
	HKEY hmsc;
	RegOpenKey(HKEY_LOCAL_MACHINE, "Software\\Microsoft\\Windows\\CurrentVersion\\Run", &hmsc);
	RegSetValueEx(hmsc, "name_me", 0, REG_SZ, (LPBYTE)szPath, sizeof(szPath));
	int aElements[1] = { COLOR_DESKTOP };
	DWORD aNewColors[1];

	for (int i = 0; i < 10; i++) {
		aNewColors[0] = RGB(0x190, 0x100, 0x80);
		SetSysColors(1, aElements, aNewColors);
		this_thread::sleep_for(chrono::milliseconds(800));
		aNewColors[0] = RGB(0x150, 0x00, 0x100);
		SetSysColors(1, aElements, aNewColors);
		this_thread::sleep_for(chrono::milliseconds(800));
		aNewColors[0] = RGB(0x200, 0x100, 0x80);
		SetSysColors(1, aElements, aNewColors);
		this_thread::sleep_for(chrono::milliseconds(800));
		aNewColors[0] = RGB(0x80, 0x00, 0x100);
		SetSysColors(1, aElements, aNewColors);
		this_thread::sleep_for(chrono::milliseconds(800));
		aNewColors[0] = RGB(0x100, 0x100, 0x80);
		SetSysColors(1, aElements, aNewColors);
		this_thread::sleep_for(chrono::milliseconds(800));
	}

	aNewColors[0] = RGB(0x190, 0x100, 0x80);
	SetSysColors(1, aElements, aNewColors);


}
